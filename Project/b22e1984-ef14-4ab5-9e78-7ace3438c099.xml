<StructuredTextModel xmlns="http://schemas.datacontract.org/2004/07/Omron.Cxap.Modules.StructuredText.Core" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"><Text>&#xD;
    &#xD;
    VAR&#xD;
        (* FB instances for each pump - all 4 *)&#xD;
        fbSensor_Pump1 : fb_SensorMonitor;&#xD;
        fbSensor_Pump2 : fb_SensorMonitor;&#xD;
        fbSensor_Pump3 : fb_SensorMonitor;&#xD;
        fbSensor_Pump4 : fb_SensorMonitor;&#xD;
        &#xD;
        (* Enable flags for each pump *)&#xD;
        bPump1_SensorEnable : BOOL := TRUE;&#xD;
        bPump2_SensorEnable : BOOL := TRUE;&#xD;
        bPump3_SensorEnable : BOOL := FALSE;&#xD;
        bPump4_SensorEnable : BOOL := FALSE;&#xD;
        &#xD;
        (* Simulation mode - DELETE THIS VAR WHEN HARDWARE ARRIVES *)&#xD;
        bSimulation_Mode : BOOL := TRUE;&#xD;
    END_VAR&#xD;
    &#xD;
&#xD;
    // PUMP 1 SENSOR MONITORING &#xD;
&#xD;
    &#xD;
    fbSensor_Pump1(&#xD;
        Execute := bPump1_SensorEnable,&#xD;
        ai_Flow_4to20mA_External := 0,&#xD;
        awPressure_Data_External[0] := 0,&#xD;
        awPressure_Data_External[1] := 0,&#xD;
        bPressure_StatusByte_External := 0,&#xD;
        bSimulationMode := bSimulation_Mode&#xD;
    );&#xD;
    &#xD;
    sSensorData_Pump1.rFlowRate_LPM := fbSensor_Pump1.rFlowRate_LPM;&#xD;
    sSensorData_Pump1.rPressure_Bar := fbSensor_Pump1.rPressure_Bar;&#xD;
    sSensorData_Pump1.bFlowSensorFault := fbSensor_Pump1.bFlowSensorFault;&#xD;
    sSensorData_Pump1.bFlowSensorWarning := fbSensor_Pump1.bFlowSensorWarning;&#xD;
    sSensorData_Pump1.bPressureSensorFault := fbSensor_Pump1.bPressureSensorFault;&#xD;
    sSensorData_Pump1.iErrorID := fbSensor_Pump1.ErrorID;&#xD;
    &#xD;
    &#xD;
    &#xD;
    // PUMP 2 SENSOR MONITORING&#xD;
&#xD;
    &#xD;
    fbSensor_Pump2(&#xD;
        Execute := bPump2_SensorEnable,&#xD;
        ai_Flow_4to20mA_External := 0,&#xD;
        awPressure_Data_External[0] := 0,&#xD;
        awPressure_Data_External[1] := 0,&#xD;
        bPressure_StatusByte_External := 0,&#xD;
        bSimulationMode := bSimulation_Mode&#xD;
    );&#xD;
    &#xD;
    sSensorData_Pump2.rFlowRate_LPM := fbSensor_Pump2.rFlowRate_LPM;&#xD;
    sSensorData_Pump2.rPressure_Bar := fbSensor_Pump2.rPressure_Bar;&#xD;
    sSensorData_Pump2.bFlowSensorFault := fbSensor_Pump2.bFlowSensorFault;&#xD;
    sSensorData_Pump2.bFlowSensorWarning := fbSensor_Pump2.bFlowSensorWarning;&#xD;
    sSensorData_Pump2.bPressureSensorFault := fbSensor_Pump2.bPressureSensorFault;&#xD;
    sSensorData_Pump2.iErrorID := fbSensor_Pump2.ErrorID;&#xD;
    &#xD;
   &#xD;
    // PUMP 3 SENSOR MONITORING (Optional - disabled by default) *)&#xD;
&#xD;
    &#xD;
    fbSensor_Pump3(&#xD;
        Execute := bPump3_SensorEnable,&#xD;
        ai_Flow_4to20mA_External := 0,&#xD;
        awPressure_Data_External[0] := 0,&#xD;
        awPressure_Data_External[1] := 0,&#xD;
        bPressure_StatusByte_External := 0,&#xD;
        bSimulationMode := bSimulation_Mode&#xD;
    );&#xD;
    &#xD;
    sSensorData_Pump3.rFlowRate_LPM := fbSensor_Pump3.rFlowRate_LPM;&#xD;
    sSensorData_Pump3.rPressure_Bar := fbSensor_Pump3.rPressure_Bar;&#xD;
    sSensorData_Pump3.bFlowSensorFault := fbSensor_Pump3.bFlowSensorFault;&#xD;
    sSensorData_Pump3.bFlowSensorWarning := fbSensor_Pump3.bFlowSensorWarning;&#xD;
    sSensorData_Pump3.bPressureSensorFault := fbSensor_Pump3.bPressureSensorFault;&#xD;
    sSensorData_Pump3.iErrorID := fbSensor_Pump3.ErrorID;&#xD;
    &#xD;
    &#xD;
&#xD;
    // PUMP 4 SENSOR MONITORING (Optional - disabled by default) *)&#xD;
&#xD;
    &#xD;
    fbSensor_Pump4(&#xD;
        Execute := bPump4_SensorEnable,&#xD;
        ai_Flow_4to20mA_External := 0,&#xD;
        awPressure_Data_External[0] := 0,&#xD;
        awPressure_Data_External[1] := 0,&#xD;
        bPressure_StatusByte_External := 0,&#xD;
        bSimulationMode := bSimulation_Mode&#xD;
    );&#xD;
    &#xD;
    sSensorData_Pump4.rFlowRate_LPM := fbSensor_Pump4.rFlowRate_LPM;&#xD;
    sSensorData_Pump4.rPressure_Bar := fbSensor_Pump4.rPressure_Bar;&#xD;
    sSensorData_Pump4.bFlowSensorFault := fbSensor_Pump4.bFlowSensorFault;&#xD;
    sSensorData_Pump4.bFlowSensorWarning := fbSensor_Pump4.bFlowSensorWarning;&#xD;
    sSensorData_Pump4.bPressureSensorFault := fbSensor_Pump4.bPressureSensorFault;&#xD;
    sSensorData_Pump4.iErrorID := fbSensor_Pump4.ErrorID;&#xD;
    &#xD;
    &#xD;
    // STATUS INDICATOR &#xD;
    &#xD;
    &#xD;
    bSensorMonitoring_Active := bPump1_SensorEnable OR bPump2_SensorEnable &#xD;
                                OR bPump3_SensorEnable OR bPump4_SensorEnable;&#xD;
&#xD;
END_PROGRAM</Text></StructuredTextModel>